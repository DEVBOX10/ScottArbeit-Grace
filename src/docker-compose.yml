name: grace-compose

volumes: 
  vol_cosmos:

networks:
  grace:
    name: grace
    #driver: default
    #enable_ipv6: true
    #attachable: false
    #external: false
    #ipam:
    #  config:
    #    - subnet: 172.28.0.0/23
    #      ip_range: 172.28.0.0/24
    #      gateway: 172.28.0.254

services:
  grace-server:
    image: ${DOCKER_REGISTRY-}grace-server
    container_name: grace-server
    networks: 
      - grace
    build:
      context: .
      dockerfile: Grace.Server/Dockerfile
    volumes:
     - ~/.aspnet/https:/https:ro
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - dapr-placement
      - daprd

  daprd:
    image: daprio/daprd:1.9.5
    container_name: daprd
    command: ["./daprd",
        "--app-id", "grace-server",
        "--app-port", "5000",
        "--dapr-http-port", "3500",
        "--dapr-grpc-port", "50001",
        "--dapr-internal-grpc-port", "57256",
        "--placement-host-address", "dapr-placement:6050",
        "--components-path", "/dapr/components",
        #"--app-health-check-path", "/healthz",
        #"--app-health-probe-interval", "5",    # (in seconds) Low values create a lot of noise in the logs when you're debugging.
        "--config", "/dapr/components/dapr-config.yaml",
        #"--log-as-json",
        #"--enable-api-logging",
        "--log-level", "debug"]
    networks:
      - grace
    ports:
      - "3500:3500"
      - "50001:50001"
      - "57256:57256"
    volumes:
      - "./dapr:/dapr"
    depends_on:
      - redis
      - otel-collector
      - dapr-placement

  dapr-placement:
    image: daprio/dapr:1.9.5
    container_name: dapr-placement
    command: ["./placement", "-port", "6050", "--log-level", "info"]
    networks:
      - grace
    ports:
      - "6050:6050"
        
  redis:
    image: redis:latest
    container_name: redis
    networks: 
      - grace
    ports:
      - "6379:6379"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.68.0
    container_name: opentelemetry-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./dapr/configuration/open-telemetry-collector-new.yml:/etc/otel-collector-config.yml
    networks:
      - grace
    ports:
      - "1888:1888"   # pprof extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP/HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "9464:9464"   # Prometheus exporter port
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
    depends_on:
      - zipkin
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - "./collector/prometheus.yaml:/etc/prometheus/prometheus.yml"
    networks:
      - grace
    ports:
      - "9090:9090"

  #zipkin-elasticsearch:
  #  image: ghcr.io/openzipkin/zipkin-elasticsearch7:latest
  #  container_name: zipkin-elasticsearch
  #  networks:
  #    - grace
  #  # Uncomment to expose the storage port for testing
  #  ports:
  #    - 9200:9200
      
  #zipkin-dependencies:
  #  image: ghcr.io/openzipkin/zipkin-dependencies:latest
  #  container_name: zipkin-dependencies
  #  entrypoint: crond -f
  #  environment:
  #    # Uncomment to see dependency processing logs
  #    # - ZIPKIN_LOG_LEVEL=DEBUG
  #    # Uncomment to adjust memory used by the dependencies job
  #    # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
  #    - STORAGE_TYPE=elasticsearch
  #    - ES_HOSTS=zipkin-elasticsearch:9200
  #  networks:
  #    - grace
  #  depends_on:
  #    - zipkin-elasticsearch

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    networks:
      - grace
    #environment:
      #- STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      #- ES_HOSTS=zipkin-elasticsearch:9200
      # Uncomment to see requests to and from elasticsearch
      # - ES_HTTP_LOGGING=BODY
    ports:
      - "9410:9410"
      - "9411:9411"
    #depends_on:
    #  - zipkin-elasticsearch
    #  - zipkin-dependencies

  #cosmosdb:
  #  container_name: local.cosmosdb
  #  image: "mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator"
  #  tty: true
  #  #mem_limit: 500M
  #  cpu_count: 2
  #  environment:
  #    - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=8
  #    - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
  #    #- AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=${IP_Address}
  #  networks:
  #      - grace
  #  ports:
  #    # Documentation on port numbers for the emulator can be found at
  #    #   https://learn.microsoft.com/en-us/azure/cosmos-db/docker-emulator-linux#configuration-options.
  #    - "8081:8081"   # CosmosDB Explorer port
  #    - "10251-10255:10251-10255" # DirectPorts
  #  volumes:
  #    - vol_cosmos:/data/cosmosdb

  #tcpdump:
  #  image: nicolaka/netshoot
  #  container_name: tcpdump
  #  depends_on:
  #    - nginx
  #  command: tcpdump -i eth0 -w /data/nginx.pcap
  #  #network_mode: service:nginx
  #  networks:
  #    - grace
  #  volumes:
  #    - "./dapr/:/data"

  #nginx:
  #  image: nginx:alpine
  #  container_name: nginx
  #  networks:
  #    - grace
  #  ports:
  #    - 80:80

  loadtest:
    container_name: daprdevcontainer_loadtest
    image: locustio/locust
    build:
      context: ./loadtest
    ports:
      - "8089:8089"
    networks:
      - grace
